services:
  mysql5.7:
    container_name: mysql5.7
    image: mysql:5.7.41
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      TZ: Asia/Shanghai
    ports:
      - 3306:3306
    volumes:
      - mysql5.7_data:/var/lib/mysql  

  mysql8.0:
    container_name: mysql8.0
    image: mysql:8.0.35
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      TZ: Asia/Shanghai
    ports:
      - 3307:3306
    volumes:
      - mysql8.0_data:/var/lib/mysql
    command:
      # 解决PHP7.x的兼容问题
      - --default-authentication-plugin=mysql_native_password 

  redis6.2:
    container_name: redis6.2
    image: redis:6.2.14
    environment:
      TZ: Asia/Shanghai
    ports:
      - 6379:6379
    volumes:
      - redis6.2_data:/data  
      # 自定义配置，默认容器内不包含配置文件，可以从http://download.redis.io下载，或者从redis压缩包中获取
      # - ./redis/conf/redis.conf:/etc/redis/redis.conf  

  frankenphp8.2:
    container_name: frankenphp8.2
    build:
      context: .
      dockerfile: frankenphp/Dockerfile
    environment:
      SERVER_NAME: ${FRANKENPHP_SERVER_NAME}
    ports:
      - 80:80
      - 443:443
    volumes:
      - caddy_data:/data
      - caddy_config:/config
      # 自定义 caddyfile
      # - ./frankenphp/Caddyfile:/etc/frankenphp/Caddyfile
    tty: true

volumes:
  mysql5.7_data:
  mysql8.0_data:
  redis6.2_data:
  caddy_data:
  caddy_config: